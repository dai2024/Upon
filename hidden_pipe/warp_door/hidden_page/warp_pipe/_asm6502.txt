    ORG $0800 ; Set the program start address to $0800

START:
    LDA #<DATA ; Load the low byte of the address of i into the A register
    LDY #>DATA ; Load the high byte of the address of i into the Y register
    STA $00    ; Store the low byte of the address of i into memory location $00
    STY $01    ; Store the high byte of the address of i into memory location $01
    LDA #$00   ; Initialize the accumulator to zero
    LDX #$02   ; Load the X register with the number of iterations

LOOP:
    LDA ($00),Y ; Load the value at the address in Y plus the address in $00 into the accumulator
    CMP #$30    ; Compare A to the ASCII code for '0'
    BCC END     ; Branch to END if A is less than '0'
    CMP #$39    ; Compare A to the ASCII code for '9'
    BCS END     ; Branch to END if A is greater than '9'
    SEC         ; Set the carry flag
    SBC #$30    ; Subtract the ASCII code for '0' from A to convert it to a number
    ASL A       ; Shift A left to multiply it by 2
    DEX         ; Decrement X to count the number of iterations
    BNE LOOP    ; Branch to LOOP if X is not zero
    STX $02     ; Store the result in memory location $02
    BRK         ; Halt the program

END:
    BRK         ; Halt the program

; Data section
DATA:
    .BYTE "43", $02 ; Define the string "43" and its length as 2
